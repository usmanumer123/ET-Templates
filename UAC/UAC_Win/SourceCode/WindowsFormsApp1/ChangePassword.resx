<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAfQAAAH0CAYAAADL1t+KAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAACAYSURBVHhe7d0JtG13QR5whjCEeR6EkMU8VLAJk1UrUKUC
        NqWKFoS2Ii1LELVF1MWiLuvCCqggSC0ySAUFilDUChSQUQV1IRWUSQalKEOYAiGEDPBCv29n/68njxfD
        e++8vH32/f3W+rLvfe/l3j1/Zw9nn8sAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ALvsK1/5SnPZgzL/LQBwXM3FfLnk8huZCnv+J5N8f8hsmv+s/+/mz+rPVv4AsE1zubZkT0hauHvlfHCG
        fN3/p//+SslV51w5uULSnzX+3T+U/q7xOy/yYgEAuBhziU5H2nNapKOAT0yundwouWPyXckPJ49Lfi55
        avKM5DnJ85IXJi9Jfid5efKK5HeTlyb9u+cnv5b0/3la8sTkPyc/mvzr5NTkJkl/Z393i32v3Dcyjz0A
        7HMtxY2CHKfSe2R9cnKX5D7Jf0qembSc//yCCy74ZIYH5nx5zvj+sJKfNf7/8TPOSN6ZvDrpC4THJPdP
        7p7cIrlK0nLvuCp2AGgRzmkpXjE5Jfm+5KeSHk3/3+RDSUv2S8nB5b1Zxgdnr7QPyqH+bX9207+/YP6z
        pt9/Lvlw8o6kR/k/m3x/ctfk6slU6B3OkwUA+8tchj2N/rCkp8rflpyenJVcpMBzJD0V8jxs6R4r/dnN
        5u8b4/GlfP+FDHuG4B35+kUZPjK5WTJPFQCsWArv4LvQ75A8O/lI8sVkFPUo0FGsNYaXupT2GI9ms9yr
        hX9O8vF8/eLkbsnl5kl01A7A7kuZjYxT0j2l3hvNvid5TdIj8GEqy5ZnXfhHx6/E/wGb4zay6byM/hsz
        fHBy06TT3Okf82CeOwCwcHNxtcDGTWO9S/x2Se9K741mZyebRbhZjAcX5FJdZPznFyGbf3Z+8ob88aMz
        vFPSt83tzZN5VgHAcqWwxlu7eqd6i7x3ib8haZGP0+q7UtyHayr3yted1p6F+MOkb6/7+qTvhR/FPs8x
        AFiQuahGmV8v+cH02usy7B3qPWJdc5EfbExrLyO01D+btNh7luIGSefRlHn2AcDxl2Iap9f79WlJT633
        RrcWeQttFPl+KfQapd5Md8gnnSdvSnofwd58m2cjABw/czH15q+eUu5bz/q2rlFiPe1c+6nIL2I6/x75
        cvPu/XOSPq3uzkkvTUwvhgDgUtXymdMiunHyiHRWn642CmvvWvlcZlyo82LMox6xvyt5VNI74scZjnku
        A8AxNEpnzjelr/ts9F4nH+U9wsXr/BlnLz6fvCy5R9Jn1+/NXwDYurlkxlHk1ZIfTHqE6Wj88I0XPdM8
        q3zdMxw9Wr9mMs3redYDwPakYKa3WiUnpX/+e4bj+eqjxJX54RtlXj0V3+fG9xPg+jjczusT5tkPAEdn
        LpaWed+S9o+T309aPr2DfVDmR2fMv3Ea/lXJNyTjY1vnpQEARyBF0lPsLfOeYn9A8hdJy2c6zT4fXSrz
        7ZjmZXTeNu/J1/3kuWsk09kRADhsKZBR5r2L/SeTjyY9Mt+7Zp6wPWOeNp3HX06hfyLDxyY9Be+aOgCH
        J+UxTrOfnDw9+UyyWeYcO2P+TqWedN7/UvJ18+IBgEuW4hhH5jfJEeJzMvxChi2WUTQK/djLLN+7nNFi
        7xPm+sLqGvNiAoBDS1mMMu/wOsmvJ1OpzOVSyvzSM+b7SPUO+D5Zbm9ZAcBFzCXR9Hrtc5ODy2QMuRRt
        lPrQsybTNfU58xIEYN9rKcy5RdJnjE8lcogjRI6PzWXR9/4/M7lZMpX6vBgB2M9SCE2LYSrz9MZ5GbqT
        fXnG8uiyOSv5leQmyeXmRQnAfpZCaJlfN0XeO6nPTloYpcyXZ7PU+6l2j0+unih1gP0qJTDKvDdZPSLp
        Y0dHiSvz5Rql3ncenJv8QNLl6OEzAPtNd/xzCXR43+QjySgKZb58XUY9Sm8+ldw76aN5p2UKwD4x7/ib
        U5J+ytdmkSv05ZuWVxxo8nWXYZ+zP71YA2AfyA5/nJ69RcrgtRlWS0GR76ZR6v1M9T7ZT6kDrN28s2+Z
        90aq3gTXa7DjI1AV+u4Zy63pDY1PTK6azEscgFXKjn5cN39Q8rGkhV7KfHeNZdfh3ya9J8INcgBr1R18
        0kI/NXlL4sh8PXo9fSzH1ye3SXqT3Lz0AViN7Nwvm33+tTLsh3ycv1EACn33jRdmTR8M1FPv070S8+IH
        YE2ygz8tOT1xE9z6bJb6x5N7JUodYG2yYz8xeVsydvqsT5freLH2h8lNk15P97x3gF3XnXnS4c8lo8wV
        +rqdn7TYH5t02c9rAwA7KTvylnmvnd85w36gRynzlZvvj2jen9w98RQ5gF3VnXfS06394JUXZ9j9vKPz
        /aPvYugHuDw56c2QCh1gF8078Bb69yYfSZf3FCz7S0v9vcm3J66lA+ya7LibnmY9KXlRMq6prvbofD77
        sHm6uek0b2b68/Fv12xjPpyTPCW5ZjKvIQDshOy4x9H5/ZIPJT1SqzUU2ZiGUVjNKOx+pGiHl2Tz304/
        Y8jXNYZr0GnpOnDXZF5DAFi87rSTE5LrJ89L2lOjuHbdocq30/bF5DNJ33/94eTPkpfnn/xmhn2QzlOT
        5ye/m7w56SNS++jbTyd9Bvp4ETD9/Dk1hjtpnkcjT0hOmFcTAJYuO+3p5qfkW5Le5bx3FJrsqs1iajpN
        n0/enrw0+amkzzC/dXKdpB9QcuXkiklf3DT9un/Wv7tGcvPk29J5P5HhC5M/TfqioEfuB/++XTbG/++S
        k+bVBICly057nG7/haSn2nf96LzjPqah9wL06Lp37T8y6XPpT5wn/YjlZ1whuV3y75PnJh9I+rv2fveF
        B7s7OR87zmO8fybp9M5TDsAiZUc9js57pPrBZBTSrhklNI6WOw1/m1J9Vob3SW6SdFq3etd2fl5vJOyl
        insm/XjZzXm4eeS+a8Y498XQjZJ5igFYpO6o5/xw8uUU4LgZbpeM8pluWss0tEx7RP7N+fpqGfb0ec9A
        TNO6TfPP7M9usV8luUPynOSMZJR6ZVT2ruHvgjGuHf54Mp3FmScbgCXJDnrkBuma92XYztm1o/NRPB3v
        flb7W5OHJJ2ultD0xLN5ko+Z+feNp6v1BUQ/1OYPkp6G33yRtIul/oak9xFMZ3MAWKB5J/1dSdt8147O
        WzhNy/zMjP9vZHinZBTrpX5EOf/e8ftvlXHqKf8ere8dqc9ZujGeTe/u/+7Eg2YAlio76CslvWO7duno
        vEXT8e0p9tOTfpDMzZLjUuSb8vubcYq/19cfk/SO8c2S3AUdz74Q6Vv8npT0kkLn7zylACxGds69Ge6v
        kl0p81GGU5knH0qZ/5sMr510ehZROPO4jPHpW9/+RcbzXRnWmIalF3vHb8zn1yW3TXr2YZ5KABYjO+f/
        kPSUcHfeu1AwY9iS6XX/fjJY30I2FXmzJPM49dPresT+jckfJ3vzOn++9HlevRTTJ8d9ZzKdeQBgQbJj
        PiF90vdQtxz3SmbBxjh2fP862ZkPEOk4zvlnybuTluQ0v3eg1Hva/XPJ45K+a2BcThCRIwxsxcZK1dPt
        b0x2oVTG+HX40eRhSa//78RNWhnPpoXeO+B7iaDv7x6lvuR533GbTrtnFfmtDPt+/j5Br6UuIkeWec8A
        R6krU9Jy6aNPeyq1llwqNRVLSuXs5Bfzda+ZT6fZd8U8vt2YT8w09NGz5yU9+l36vG+hdzz7vPt7JL3R
        74bJDUTkiNL7aqZ9MRyVeUXqdecfSXoH89ILpcZR4u9l2I943cmNIeM8Sr2l2CPe6vxf8jIY43dm8uos
        g+ck/yN5rogcVp6d/Fq2o35uRvcD3gbK0ZlXpOsmv5qMI8SlFkrW/+lyQAdnJHfJ1ztZ5kPGfTqzkNw4
        eW/S6Rv3MSxZx6+XCfoAn55dEJHDS7edTya9ZHipPPSKlZtXpFsmf5TUkotklEhfeDw62ekyHzIN4+Ez
        j0o2z5IsdVl0vJpx+l1EDj/nJJ8+cODAQzNU6BydrECjTO6W9AlgY0e9OPOR+XSqPXl90g8JaQmuYiPI
        dPQGuV4+eFWyC0fowNHpo6A/nfxAotA5OlmBerq9+b6k10QXW+gxCr0bwL9NugGs5gNCMi19cdJSf3By
        elJKHdZLobM980rUEnl80ms6Sy30MV49TfXy5OZJx32ekt3XaZnTo/T/nThKh3VT6GxPVqDe3d73Eb80
        WWqZDy3z3kDSp9lN732eJ2NVOl3JI5NdeWIfcGQUOtuTFahH530PZD9mdFyfXppRah23tye93t8XIvNU
        rE+m7eTk3RdccEHfmqfQYZ0UOtvRlSfp8PrpjM23Sy1Oxq9H532Lx68kO/cQmcOVaesLrWcnY5kodVgf
        hc52ZOXpqd0OT002P85zaUapfSZZ/fs1M20j90k63X2bHrA+Cp3tyMrTQu+R7v2TzyZLLvQepb8ng7sm
        03jPk7E6mbaR3hz3icQROqyTQmc7xgqU/FDSFWuRpZEiH5cBXpmcmKz9dPvIVZP/lXS5jHkArIdCZzvG
        CpT8dDIe3LI0Ha0xXk9LOr6rvLv9YJnOps/X7/Q77Q7ro9DZjqw8vfGqBfnUZJFHgRtl3mHfytXxXf1K
        P09nh9+RKHRYJ4XOdmTlmQr9wIEDz82wpdE7yZdmKvT0ep95fO9kvxX6nZOzE9fRYX0UOtuRlafv5b5s
        yvJ5GS660KOPpb1N0vGep2C9Mo2j0G+RvD/pfHAdHdZFobMdWXmmQk92odB7F34/jGW/FfoN84LrTzJU
        6LA+Cp3tyMozrqH3A/Z7uXpxhd6Rmr/se9CvM4/66mVaR6FfLXl10jJX6LAuCp3tyMozCv0ZydKP0Fvo
        15xHfd/INHcZvSRpmS9x+QBHTqGzHVl5RqE/JVnqKd1R6D3lfuOk4z1PwXqN6UyulPx24ggd1kehsx1Z
        eUahPylZeqF/LrlVsl8KfZxyv3rymkShw/qMQl/9I605xsYKlPxsUqM8l2SM01nJKcl+K/TrJ29JFDqs
        Twu9lxP7kdAKnSM3VqDkcclSjUI/Lzkt6fiufqWfp7PDW15wwQUfzLDzYYkvuIAjlG37/KSF/vBk1Z9R
        wTGWlWcU+uaz3JdWGpvj82PJfiv0uyd9MdOjc4UOK9JCz+AzBw4c6BG6QufIjRUoeWDSU9pLLfQxTr+a
        dHxX/yz3eTo7fEDS6ffoV1gZhc7WzCtQh/fOivWpDJdY6DVdO8449v3Y10imslu7TGMf/PPkpMvEW9Zg
        ZRQ6WzOvQB3eMSvWhzNcaqFP45RxfG8Gd0tWveJn2kaul/xlUm6Ig5VR6GxNV54510rekyyy0LPSd5xa
        aJ/Jl6t/v2ambeROSa+fO90OK6TQ2aqsQH0v+pWTtyYtzaUeCfaU8znZAH4pw6smqz7tnmnrxv2TSV/M
        fHl+UQOsiEJnq7IC9Tptn0b2imSRR+gxxqsvNv40OTXpC5F5KtYn0zbef77UZQIcJYXOVmUF6unrlvov
        Jz0KXmp5dLw6fh9PHpr0RciaT7v/y+SjiWvnsFIKna2aV6KW+iOTL8yndpdY6h21ltu5yQuSPtf98vNk
        rEqmq3fyPyvpxu7oHFZKobNVWYGaXo++Z9JnCi+10Kvj1aP0DyX3SVa1AWRaxrK4V/K+ZMnLAjhKCp2t
        y0rU69G9o/qDPQyufL1Eo9CbZyY97d6NYJ6S3ZbpaJn388/7bP3p6HzBywI4Stm8FTrblZWop9xPSjZv
        jFtyqffU+xnJ/ZKpCOdJ2VmdhqTL4VuSD81FvtRlAGyBQmfruhIl/ZjOJybTkeGcJRqF3rw5uVHSaZin
        Zvdk3EeZXyV5SbJ5c6JSh5VS6GxdVqKmhdLP5D0z6QHi0otkuvs7o/nzGfQ09Tw1uyXj3TJv+vWPJGdl
        mjptihxWLtu6Qme7shKNYumNcX28au1CobT4PpGNoi9EpunYNRnnUej3T/oxip3vyhz2AYXO1mUlGrlp
        8qpkOkTvcMHG+PX09F8lvTO8G8Q8VcvXcU1a5ndN+pnnNZ15ANZPoXPMZGXqafenJ312+C4cKY5xbPpU
        tX5wSx+Ss/iNIuPYdAP++uS1SV+Y7MIz28c6Mc33+YWfLDjDxp8tzRinzXHcSubprjFcmqnQE4XO9mWF
        ekgyPkp10Q7aWJtXJi3IacNI5qlannn8bpP8z+TcTEoLfRdsznPYlmO9Pi11fT0/234L/eGJQme7skKd
        nBWsp7B37casjmuPcHu021PY49r0PGXH3+b4ZHiL5LeTc5KOe1+f7ML8nsY1OSvp/RbvkEXnL5K3J+Mx
        wktex/oUyA8kY7wPnpYjyfuyWS32jGPGzRE6x05WqCsmz03qwA6VzBg2f570Br9OzyI2ko7DPC79ug/x
        6Vvuxo6mdmE+V0uhO6G+ve4uye1k8flHyROSs5MlrmdjnP5f8qDkUNNwpOnP+2zS37HEae+21Cd09sbe
        XvJU6GxPVqjmvkntwjXdyXjhMQ97+vpvkn52ej9qtdN0wjyJl7r87m6oLfM+2e6ByceSzR3MEnc0Bxvj
        23nbt9Y9JsM+YXDaCcli02XU+0p+IvlCssR1bRqnrFN/ncG3Jt1WphfiR5lO+zclfQjVWH+XZhR691UK
        ne3JyjRy3eT9STeAXbrremyw7fW+GOkr8/+W3Do5MekG3g19ms5jZfz8+XeNj6e9ffLUpBtv5+mYr0vc
        yRxK5+kY13cmPcuwiLMfXLwsn5ZE18EfTxZZ6GO9yqCF/k+TaRs9WvkZXT9b6NPbQcfvWRiFzrGTFWoU
        UR9y0tLZlZu1hrHhNh3/Dt+a/Fhyh6RPY9t79T9P9tbkZ47519/RIr9tRucRGf5Jcl7S+bnEHcslGfO0
        npMck/nHdmUZKXSFzn7VFSrpsHdg9waVcTS5xI3hknScx4uSPgHvdUlPFd8xmd7eNmee+iPXn7Hx83of
        Qq9b/sekN+n1lN/mfNzVeVm9DtvnzU/TO08+C5VlpNAVOvtVVqixIXQn8JRklwt96Lh3GsZp+D9OfjH5
        5mSa5qM1fk7SG8X6ONq+L34q8uxHvpysYR7Wy5OuG/OUs2RZTgpdobOfZaXqhtDhPZI+wWyXjyxrjHfL
        dbxA6YbU99u/PvnR5LbJ5edZ8DXr/5P0bMajkt9PunH2Z/d3bpb4rs672hz3vmDpdM9zgCXLclLoCp39
        LitWdwLXS3496Uq360eYNcb/UBt3T8t3h/KipHcE3yc5NenNX7fPP+9bYPr1Kcm9k/6bFyS9efDg+wz6
        szd//hrmW/N7yZXmVYQdkOWl0BU6+11XrKTXgr83+XAyldZCN4oj0ekY2bT5530R053gxzPZfTBHH6Yy
        bmob2XRxf76z5uXd9PLBdyeXm1cRdkCWl0JX6Ox3WbHGBnGz5MVJ79Buwa3dKLCLZN4ZNJ0H42xFs2Zj
        Gvsi5mVJP7xnXkPYBVleCl2hs99lxWq6YXVn8O+STyRjo1jihnEs7btp3tj5tcx7dqLrwBXm1YMdkWWm
        0BU6XKTUr5X07uZuEPvhKJ0Ld4Bd1i30fujNyUl3kPPawS7I8lLoCh0u1BVszn2zPfQ9yHsbIOs0lm8G
        vczSo/N/lUwv8NgtWWYKXaHD3+tKllwm28OzMxyU+rpNN0FG3+XQRwF352hns2OyzBS6QoevlpXtpORd
        STcMhb5OY9n2dHt3sH3r3nSWZl4N2CFZbgpdocOhZYV7SNK3b40d/xI3Eo7MWJ4t8y8mP5R0p9jMawC7
        JMtNoSt0OLSscH3YzPOSzfdjs/vGchzLtA+R6UfP9hPq5qXPrsmyU+gKHQ6tK1zSD+d4Z7aProyjANht
        03Kc/U1yt3w/Le950bODsvwUukKHQ+sKl/SzxftxpJ/ONuJIfR3GDq8fXtNPpOvRuafC7bgsQ4Wu0OHQ
        ssKNUv+65DeTFno/TawbyxI3GC7ZWHbnJr2ccpPEdfMVyDJU6AodDi0r3Cj0pp/5/bakN1E1oxjYLWO5
        vSO5c7KVHSrHX5ajQlfocPGy0o2NpelHrJ6ejFKoJW44fLWxk2t6puW05LA/Qpbl6vJMFPrfr+tLo9BZ
        hnkF7LCfBX5OMpXDQjccLmpaVsl0ySR5ZNJlOS9d1iDLU6ErdPjazCvhNZKnJd1hjFPvLFeXT/dvXVZd
        Zr+cdKfvVPvKZHkqdIUOX7uuhEk/vOM3ku40xp3vLMy8U+vgQNKHx7wwGR+8YmeyMlmmCl2hw+HJitjc
        Mfk/yfnZdr6UIcvT/VqPzPvBK/0UtVOS7vC9RW2FslwVukKHw5MVcew8WupvTloaXVlZli6X5o+SPqf9
        iokyX6ksW4Wu0OHwZEVsuiE2fR/z25MWh/eoH39j/k/LIIujO85bJ93hNfNSZG2ybBW6Qocj0xUy6fD2
        yZuSPqykxV57pcKlZszvDnsZpM8NuGUyvfiaFxsrlWWs0BU6HLmulMnlsv3cOXllsveWto1w7E3zujI8
        N4PXZNhLIl1G89JizbKcFbpCh6PTFbMraLah3nT1sqQ3YU0Fk3BsjR1k72Tv12cnL026LLrTmJcSazcv
        b4V+4a9Z4r5HobN8WTFHulGdlG3p+fP21P/0FPxSN7BdN3aO0zxO+kLq2UlPs/ejUO0w9pEsb4Wu0OHo
        ZeWcUgcOHOhO5ReSFkzfp67Ut2/My87bcd/Cf02uknTntpUdJbsjy1uhK3TYnq6kc/oWqT5i9L3Ztnpd
        fZSOUj9K886qg87T3oj4weShyd78nxcH+0iWu0JX6LBdXVGTbmBXTv558opklPpURglHZsy/5szkd5J7
        Jd2RK/N9LMv+UIW+qG1tFG0GfRGq0GEXZGUdG1lX3Ntn+3pKhp9Nxk5mykI3vCUZ86o251t3XE9IbpN0
        J+6BMftc1oHNQu/NkZvrztIcqyP0M5Kl6ltJW+gPSxQ6uyUrbDMdNSbXSr4neXdSmzubpe50jre9+TK/
        8Bnfvzvfdl52no75O8919qusA6PQH5OclYz7KxaTrLcddn3+QAbH7Ag9+arfvYD0niJH6OyurLRT5q+7
        0d0yG/PzM+wp+BpPlxulxYXGvBg7p+pRV+9iv2EyHZFnuDd/2d/GupD0Utd1kusuLdnEx7AvRvtOjK2s
        v/PP6c+7dvJVv3ch6TLp+F0p2cp0w3E1r8gnJg9P3pWMB9FMn9qm1Pde2HQwPsmuRf5nyYOTzjuv7AE4
        vlJGzThN/A3JE5Oehu9NPHtvcZuzr4wiTzoPOi86Tzpvfjq5beL0OgDL0UKai6mn4HuarHdpPzV5X9K3
        YbXUxtHp2o1pHNPcMu886NmLvpe/1xl7va3zSpkDsDxzQTUt9V5j+o7kWcnBN/TUGsu909QD881p/WTy
        9KQvcnq9zdvRAFi+FNUo9h6Fttivmnx7Sq6Pjx1vvRlH6yM1hruk5T0Z38+p3kvwjKRH5H3aW+fFdCds
        Ms8tANgBKa6908pJnzTXcvut5BNJ3/IxTEU4F+NmKS7RNG4XM649tf6xpHeu3ynp9O+duZhnCwDsprnQ
        Omz6FpxTkyclb0lagJuf5nZwlmBvfEaRj2HSEv9I8gfJf0n6Eac9rT6mV5EDsB6j4Dbl+5PTiw9MerPY
        m5KPJ+O0fK8/j9K8tO+WH7+/D87YvDwwxqF3q/9d0s8of3zygOSG82RN8v1XTS8ArNJcej1673X22yff
        ljw26fPM35N8KpmKNRml2oLtIxebg4t+5JJs/tvx8zd/7sE/s3/WywR/mbwkeXRyz+TWSc84OAoHYP9K
        EW6W+ngr13gqVj8D/LTkZ5KX5Ej5bRm2VFuuo2j35O9bwv27nr4/L99Pw0N83VPk/VCFceQ9jJ/Z9O97
        Gr2XBF6QPC65b3LzZDwZaozvNA0AwIa5JHtH+F5ZJi386ye9qa5PpHty0iPlNyZ9f3evw38+6anwnrJv
        vtikwKfhxvfj7/tvz8z3Le53JK9NXpj0A1K+P7lb0jMHYxyalrgPTgGAr9VcoKPcm34/3S0+f3215MZJ
        P53slOSfJPdI7p3cL7l/0mvbD5rTr/tn35n033xr8o1Jn253q+QGSd9eNn7H+D3j7WYdF6fWAeBIzcXa
        gm2p7r2Xex6O9O8Ozubffy3/ZvP3TH82jwIAcCxslO82M/90AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAFiYy1zm/wOPCzhTDG1W7wAAAABJRU5ErkJggg==
</value>
  </data>
</root>